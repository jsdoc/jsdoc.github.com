<!--{
    "title":       "@private",
    "out":         "tags-private.html",
    "description": "This member is meant to be private."
}-->
<h3>Overview</h3>

<p>This tag marks a doclet as private, or not meant for general use.
Private members are not shown in the generated output unless JSDoc is run with the <code>-p</code> or <code>--private</code> switch.
</p>

<p>Note that "@private" is equivalent to "@access private", see <a href="tags-access.html">@access</a>.</p>

<h3>Examples</h3>
{{#example}}Usage of @private.
/** @namespace */
var Parts = {
    /** My head. */
    Head: 1,
    /** @private */
    FamilyJewels: 2
};
{{/example}}
<p>
In the above, <code>Parts</code> and <code>Parts.Head</code> appear in the generated documentation, but not <code>Parts.FamilyJewels</code> because it is private. If JSDoc were run with -p or --private then it would appear.
</p>

{{#example}}@private is not inherited
/** 
 * @private
 * @namespace */
var Clothes = {
    /** @class */
    Jacket: function () {},

    /** @member */
    foo: 1
};
{{/example}}
<p>
Private status is not passed onto member objects. Even though <code>Clothes</code> is marked private, <code>Clothes.Jacket</code> and <code>Clothes.foo</code> are not.
</p>
<p>
<code>Clothes.Jacket</code> will show up in the Classes index of the generated documentation and its documentation page will be generated.
</p>
<p>
However, <code>Clothes.foo</code> will <em>not</em> be in the output documentation (for the default template).
This is because the default template only documents "non-special" (non-namespace/class) members of a namespace on the namespace page itself, which was not generated due to being private.
</p>

<h3>See Also</h3>
<ul>
    <li><a href="tags-protected.html">@protected</a></li>
    <li><a href="tags-public.html">@public</a></li>
    <li><a href="tags-access.html">@access</a> which encompasses @private, @protected and @public.</li>
    <li><a href="about-commandline.html">Command-line options to JSDoc</a></li>
    <li><a href="tags-instance.html">@instance</a>, <a href="tags-instance.html">@instance</a>, <a href="tags-static.html">@static</a> and <a href="tags-global.html">@global</a> for modifying the <em>scope</em> of a doclet.</li>
</ul>
